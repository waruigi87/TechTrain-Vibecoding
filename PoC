## 1. 目的・背景  
- **目的**  
  - 小学生が自分のアバターを動かしながら日本全国の都市を仮想散歩し、地理・歴史・公民を楽しみつつ学べるメタバースゲームを提供する。  
- **背景**  
  - 実地旅行は回数や費用に制限があり、学校の教科書・動画教材だけでは “リアル感” が不足しがち。  
  - 47都道府県を手軽に“冒険”する体験を通じて、学習意欲と地方への興味を喚起したい。  

## 2. ユーザー  
- 主役：小学生（低学年～高学年、難易度選択対応）  
- 関連者：保護者・先生（学習ツールとしての利用）  

## 3. 課題  
1. 実際に何度も旅行できない→リアルな“現地体験”が不足  
2. ゲーム性の薄い既存学習コンテンツ→継続モチベーション維持が困難  

## 4. 解決策  
- Unity＋WebGL／Blazor wasmでリアルな3D都市モデルを再現  
- クイズクリアでコイン獲得＆ステージ開放、報酬で移動手段・アイテム購入  
- PLatau等オープンデータで地方のランドマークを再現  

## 5. 機能要件  

| カテゴリ           | Must（必須）                                                                          | Nice to Have（拡張）                                     |
|--------------------|---------------------------------------------------------------------------------------|---------------------------------------------------------|
| マップ選択        | - 初期は地元・大阪シーンをロード<br>- クリアで隣接都道府県アンロック<br>- UIで進捗可視化 | - アンロック可能地域をハイライト<br>- 進行度マップ       |
| 散歩／クイズ      | - 指定地点でクイズポップアップ<br>- 問題はTitleDataから取得<br>- 正答でコイン反映      | - ヒント機能（コイン減）<br>- アバターエフェクト演出     |
| 報酬／アイテム管理 | - コイン残高管理<br>- アンロック画面に必要コイン表示<br>- コイン消費でステージ開放       | - 着せ替えアイテム購入<br>- ドローン・航空券・フェリー購入 |
| UI／UX            | - 簡易操作チュートリアル<br>- コイン残高＆ステータス常時表示                           | - ミニマップ<br>- ランキング・実績バッジ                 |

## 6. 非機能要件  
- 初回ロード時間：5秒以内  
- モバイル・PCブラウザ両対応（レスポンシブ）  
- セキュア：コイン操作はサーバー検証必須（PlayFab Cloud Script）  

## 7. KPI／検証指標  
- 初回ロード：≤5秒  
- クイズコイン付与成功率：100％  
- ステージ開放成功率：100％  
- ユーザーテスト満足度（5点評価）：平均 ≥4  

## 8. 画面設計（主要画面フロー）  
1. **起動画面** → 2. **マップ選択画面** → 3. **3D散歩シーン** → 4. **クイズポップアップ** → 5. **アンロック・ショップ画面**  

*(ワイヤーフレームは別途共有)*  

## 9. 機能仕様（概要）  
- **Unity WebGL**：3Dシーン、アセットバンドル、JSInterop  
- **Blazor wasm**：マップUI、ステータス表示、Unityラップ  
- **PlayFab**：ユーザーデータ管理、TitleData、Cloud Script  
- **AWS S3/CloudFront**：アセットCDN配信  

## 10. 工程・スケジュール（PoC想定：1週間）  
| フェーズ           | 期間              | 内容                                   |
|--------------------|-------------------|----------------------------------------|
| 要件定義・設計     | Day 1             | PRD確定、シナリオ決定                  |
| 開発①（基盤実装）  | Day 2–3           | Unity＋Blazor 基本連携、マップ選択実装 |
| 開発②（クイズ機能）| Day 4             | クイズ取得・表示、コイン反映          |
| 開発③（アンロック）| Day 5             | ステージ開放・UI実装                  |
| テスト・デプロイ    | Day 6             | AWS Amplify 配信、内部テスト          |
| ユーザーテスト     | Day 7             | モニターテスト、アンケート回収        |

---
以上が PoC～初期PRD の骨子です。  
ここまででフィードバックや追加リクエストがあれば教えてください！
